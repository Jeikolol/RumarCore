@model PaginatedList<RumarApp.Models.ClientViewModel>

@{
    ViewData["Title"] = "Consulta";
}

<h1 class="text-center font-bold">Consulta de Clientes</h1>
<div class="panel panel-primary">
    <div class="panel-heading">
        <a type="button" class="btn btn-secondary" asp-action="Create">
            <i class="fa fa-plus"></i>
            Cliente
        </a>
    </div>
    <div class="panel-body">
        <div class="table-responsive">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <span class="input-group-addon" id="inputGroup-sizing-default">
                        <i class="fa fa-search"></i>
                    </span>
                    <input type="text" class="form-control border-primary mx-wi"
                           name="SearchString" value="@ViewData["CurrentFilter"]"
                           placeholder="Buscar en la lista..." />
                    <span class="input-group-btn">
                        <input type="submit" value="Buscar" class="btn btn-secondary" />
                    </span>
                </div>
            </form>
            <table class="table table-striped-even-light-blue">
                <thead>
                    <tr>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Apellido
                        </th>
                        <th>
                            Identificacion
                        </th>
                        <th>
                            Direccion
                        </th>
                        <th>
                            Telefono
                        </th>
                        <th>
                            Acciones
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.FisrtName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Identification)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="fa fa-pencil"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-success">
                                    <i class="fa fa-eye"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-danger" data-toggle="modal" data-target="@("#deleteModal-"+item.Id)">
                                    <i class="fa fa-trash"></i>
                                </button>
                                <div id="@("deleteModal-"+item.Id)" class="modal" tabindex="-1" role="dialog">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <partial name="_DeleteClientModal" model="@item" />
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-primary @prevDisabled">
                <<
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-primary @nextDisabled">
                >>
            </a>
        </div>
    </div>
</div>
